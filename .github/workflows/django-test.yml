# This is a GitHub Actions workflow to run your specified Python tests.

name: Python CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches:
      - main
      - test/cd-pipeline # Triggers on your test branch
  # Triggers the workflow on pull request events targeting main
  pull_request:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # --- FIX ---
    # The error log "pytest-django found a Django project in backend"
    # tells us that 'backend' is the real project root.
    # We will set our working directory to 'backend' for all steps.
    defaults:
      run:
        working-directory: ./backend

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v4

      # Sets up a Python environment for use in actions
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # You can change this to your desired Python version

      # Installs dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          # Install the pytest-django plugin to load Django settings
          pip install pytest-django
          
          echo "--- Listing files in backend directory ---"
          ls -la
          
          # This line will install all your project dependencies
          # --- FIX ---
          # We are now IN the 'backend' folder, so we just look for 'requirements.txt'
          pip install -r requirements.txt
          
          echo "--- Listing installed packages (to check for Django) ---"
          pip list

      # Runs only your specified test file
      - name: Run specific tests
        env:
          # --- FIX ---
          # We have removed the PYTHONPATH variable.
          # pytest-django is handling the path for us, since we
          # are in the 'backend' directory.
          
          # --- FIX ---
          # Since we are in the 'backend' folder (which contains 'manage.py'),
          # the correct path to the settings module is 'backend.settings'
          DJANGO_SETTINGS_MODULE: backend.settings
          
          # Based on your settings.py, we set this to '1'
          # to force Django to use the sqlite3 test database.
          USE_SQLITE_FOR_TESTS: '1'
          
        run: |
          # This command runs ONLY your specific test file
          # --nomigrations skips running migrations for faster tests
          # --- FIX ---
          # We are in the 'backend' folder, so the path is just 'friend_request/tests.py'
          pytest --nomigrations friend_request/tests.py

