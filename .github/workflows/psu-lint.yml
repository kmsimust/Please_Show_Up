name: PSU Linting

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  lint-backend:
    name: Lint Backend (Python/Django)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Linters/formatters (project-independent)
          pip install ruff==0.6.9 black==24.8.0

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (check formatting)
        run: black --check .

      - name: Django sanity check (optional)
        run: |
          python -c "import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE','backend.settings'); import django; django.setup()"
          python manage.py check
        continue-on-error: true

  lint-frontend:
    name: Lint Frontend (ESLint)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-frontend-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: ESLint
        run: npm run lint --max-warnings=0
